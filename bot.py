from telethon import TelegramClient, events, functions, types
import asyncio
import random
import aiohttp
import logging
import pytz
from datetime import datetime
import os
import time

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
prefixes = ['.', '/', '!', '-']
logger = logging.getLogger(__name__)

# –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–¥ –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥
SECRET_CODE = "unblockcmd"  # –ö–æ–¥ –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –∫–æ–º–∞–Ω–¥—ã
unlocked_commands = {}

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è loliart
@loader.tds
class loliArt(loader.Module):
    """RandomArt/Photo BY:@neetchan"""

    strings = {
        "name": "LoliArt",
        "loading_photo": "<emoji document_id=5215327832040811010>üîÆ</emoji> <b>Process your Loli Art...</b>",
        "error_loading": "<b>Failed to get photos. Please unblock @AnimeLoliChan_bot</b>",
    }
    
    async def loliartcmd(self, message):
        """-> RandomArt"""
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –ª–∏ –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if message.sender_id not in unlocked_commands or not unlocked_commands[message.sender_id]:
            await message.reply("–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞! –í–≤–µ–¥–∏—Ç–µ /secret [–ø–∞—Ä–æ–ª—å] –¥–ª—è –¥–æ—Å—Ç—É–ø–∞.")
            return
        
        await utils.answer(message, self.strings("loading_photo"))
        
        async with self._client.conversation("@AnimeLoliChan_bot") as conv:
            await conv.send_message("/lol")
        
            otvet = await conv.get_response()
          
            if otvet.photo:
                phota = await self._client.download_media(otvet.photo, "loli_hentai")
                await message.client.send_message(
                    message.peer_id,
                    file=phota,
                    reply_to=getattr(message, "reply_to_msg_id", None),
                    )

                os.remove(phota)
                
                await message.delete()

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è loli hentai
@loader.tds
class lolihentai(loader.Module):
    """Your the best friend in loli hentai"""

    strings = {
        "name": "LoliHentai",
        "loading_photo": "<emoji document_id=5215327832040811010>‚è≥</emoji> <b>loading your loli photo...</b>",
        "error_loading": "<b>Failed to get photos. Please unblock @ferganteusbot</b>",
        "search": "<emoji document_id=5328311576736833844>üî¥</emoji> loading your photo..."
    }

    strings_ru = {
        "name": "LoliHentai",
        "loading_photo": "<emoji document_id=5215327832040811010>‚è≥</emoji> <b>–∑–∞–≥—Ä—É–∑–∫–∞ –≤–∞—à–µ–π –ª–æ–ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏...</b>",
        "error_loading": "<b>–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–π—Ç–µ @ferganteusbot</b>",
        "search": "<emoji document_id=5328311576736833844>üî¥</emoji> –∑–∞–≥—Ä—É–∑–∫–∞ –≤–∞—à–µ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏..."
    }
    
    async def lolicmd(self, message):
        """-> random loli photo"""

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –ª–∏ –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if message.sender_id not in unlocked_commands or not unlocked_commands[message.sender_id]:
            await message.reply("–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞! –í–≤–µ–¥–∏—Ç–µ /secret [–ø–∞—Ä–æ–ª—å] –¥–ª—è –¥–æ—Å—Ç—É–ø–∞.")
            return
        
        await utils.answer(message, self.strings("loading_photo"))
        
        async with self._client.conversation("@ferganteusbot") as conv:
            try: 
                lh = await conv.send_message("/lh")
            except Exception as e:
                return await utils.answer(message, self.strings("error_loading"))
        
            otvet = await conv.get_response()
            await lh.delete()
            if otvet.photo:
                await message.client.send_message(
                    message.peer_id,
                    message=otvet,
                    reply_to=getattr(message, "reply_to_msg_id", None))
                await otvet.delete()
                await message.delete()

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è –∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥
@events.register(events.NewMessage(pattern='/secret'))
async def secret_handler(event):
    """–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã loli –∏ loliart –ø–æ –ø–∞—Ä–æ–ª—é"""
    code = event.raw_text.split(" ")[1] if len(event.raw_text.split(" ")) > 1 else ""

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø–∞—Ä–æ–ª—è
    if code == SECRET_CODE:
        unlocked_commands[event.sender_id] = True
        await event.reply("–°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–¥ –ø—Ä–∏–Ω—è—Ç! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã .loli –∏ .loliart.")
    else:
        await event.reply("–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

# –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ help
@events.register(events.NewMessage(pattern=f'[{"".join(prefixes)}]help'))
async def help_handler(event):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥"""
    
    help_text = """üî± UGCLAWS USERBOT üî±

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
‚Ä¢ üíß.help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
‚Ä¢ üíß.anime [nsfw] - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ª—É—á–∞–π–Ω–æ–µ –∞–Ω–∏–º–µ —Ñ–æ—Ç–æ
‚Ä¢ üíß.im [—Ä–µ–∂–∏–º] - –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–º–∏—Ç–∞—Ü–∏—é (—Ä–µ–∂–∏–º—ã: typing/voice/video/game/mixed)
‚Ä¢ üíß.imstop - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–º–∏—Ç–∞—Ü–∏—é
‚Ä¢ üíß.time - –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –≤—Ä–µ–º—è –≤ –Ω–∏–∫–µ
‚Ä¢ üíß.time_msk - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è
‚Ä¢ üíß.time_ekb - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –µ–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥—Å–∫–æ–µ –≤—Ä–µ–º—è 
‚Ä¢ üíß.time_omsk - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–º—Å–∫–æ–µ –≤—Ä–µ–º—è
‚Ä¢ üíß.time_samara - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∞–º–∞—Ä—Å–∫–æ–µ –≤—Ä–µ–º—è"""

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–∏ –∫–æ–º–∞–Ω–¥–∞ .loli –∏ .loliart
    if event.sender_id in unlocked_commands and unlocked_commands[event.sender_id]:
        help_text += "\n‚Ä¢ üíß.loli - —Å–ª—É—á–∞–π–Ω–∞—è –ª–æ–ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è"
        help_text += "\n‚Ä¢ üíß.loliart - —Å–ª—É—á–∞–π–Ω–æ–µ –ª–æ–ª–∏ –∏—Å–∫—É—Å—Å—Ç–≤–æ"

    await event.edit(help_text)

# –í–∞—à–∏ —Å—Ç–∞—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã

@events.register(events.NewMessage(pattern=f'[{"".join(prefixes)}]anime'))
async def anime_handler(event):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –∞–Ω–∏–º–µ —Ñ–æ—Ç–æ"""
    args = event.raw_text.split()
    if len(args) > 1 and args[1].lower() == "nsfw":
        url = "https://api.waifu.pics/nsfw/waifu"
        caption = "üéó–õ–æ–≤–∏ NSFW —Ñ–æ—Ç–æ!"
    else:
        url = "https://api.waifu.pics/sfw/waifu"
        caption = "üîÆ–°–ª—É—á–∞–π–Ω–æ–µ –∞–Ω–∏–º–µ —Ñ–æ—Ç–æ!"

    message = await event.respond("–≤–∞–Ω —Å–µ–∫..")

    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url) as response:
                if response.status == 200:
                    data = await response.json()
                    if "url" in data:
                        await event.client.send_file(event.chat_id, data["url"], caption=caption)
                        await message.delete()
                    else:
                        await message.edit("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ URL –≤ –æ—Ç–≤–µ—Ç–µ.")
                else:
                    await message.edit(f"–û—à–∏–±–∫–∞: {response.status}")
    except Exception as e:
        await message.edit(f"–û—à–∏–±–∫–∞: {e}")

@events.register(events.NewMessage(pattern=f'[{"".join(prefixes)}]im'))
async def im_handler(event):
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–º–∏—Ç–∞—Ü–∏—é: .im <—Ä–µ–∂–∏–º>
    –†–µ–∂–∏–º—ã: typing/voice/video/game/mixed"""

    args = event.raw_text.split()[1] if len(event.raw_text.split()) > 1 else "mixed"
    mode = args.lower()
    chat_id = event.chat_id

    if chat_id in _imitation_active and _imitation_active[chat_id]:
        await event.edit("‚ùå –ò–º–∏—Ç–∞—Ü–∏—è —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞")
        return

    _imitation_active[chat_id] = True

    _imitation_tasks[chat_id] = asyncio.create_task(
        _imitate(event.client, chat_id, mode)
    )

    await event.edit(f"üé≠ –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞\n–†–µ–∂–∏–º: {mode}")

_imitation_tasks = {}
_imitation_active = {}

async def _imitate(client, chat_id, mode):
    """–ë–µ—Å–∫–æ–Ω–µ—á–Ω–∞—è –∏–º–∏—Ç–∞—Ü–∏—è –¥–µ–π—Å—Ç–≤–∏—è"""
    try:
        while _imitation_active.get(chat_id, False):
            if mode == "typing":
                async with client.action(chat_id, 'typing'):
                    await asyncio.sleep(5)
            elif mode == "voice":
                async with client.action(chat_id, 'record-audio'):
                    await asyncio.sleep(5)
            elif mode == "video":
                async with client.action(chat_id, 'record-video'):
                    await asyncio.sleep(5)
            elif mode == "game":
                async with client.action(chat_id, 'game'):
                    await asyncio.sleep(5)
            elif mode == "mixed":
                actions = ['typing', 'record-audio', 'record-video', 'game']
                async with client.action(chat_id, random.choice(actions)):
                    await asyncio.sleep(5)
    except Exception as e:
        logger.error(f"Imitation error: {e}")
        _imitation_active[chat_id] = False

@events.register(events.NewMessage(pattern=f'[{"".join(prefixes)}]imstop'))
async def imstop_handler(event):
    """–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–º–∏—Ç–∞—Ü–∏—é"""
    chat_id = event.chat_id

    if chat_id in _imitation_active:
        _imitation_active[chat_id] = False
        if chat_id in _imitation_tasks:
            _imitation_tasks[chat_id].cancel()
            del _imitation_tasks[chat_id]

    await event.edit("üö´ –ò–º–∏—Ç–∞—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")

# –î–ª—è –≤—Ä–µ–º–µ–Ω–∏ –≤ –Ω–∏–∫–µ
_time_running = False
_time_timezone = 'Europe/Moscow'

@events.register(events.NewMessage(pattern=f'[{"".join(prefixes)}]time'))
async def time_handler(event):
    """–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –≤—Ä–µ–º—è –≤ –Ω–∏–∫–µ"""
    global _time_running
    if _time_running:
        _time_running = False
        await event.edit("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ –Ω–∏–∫–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    else:
        _time_running = True
        await event.edit("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ –Ω–∏–∫–µ –∑–∞–ø—É—â–µ–Ω–æ")
        asyncio.create_task(update_nick(event.client))

@events.register(events.NewMessage(pattern=f'[{"".join(prefixes)}]time_msk'))
async def time_msk_handler(event):
    """–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –≤—Ä–µ–º—è –Ω–∞ –ú–°–ö"""
    global _time_timezone
    _time_timezone = 'Europe/Moscow'
    await event.edit("–í—Ä–µ–º—è –≤ –Ω–∏–∫–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø–æ –ú–°–ö")

@events.register(events.NewMessage(pattern=f'[{"".join(prefixes)}]time_ekb'))
async def time_ekb_handler(event):
    """–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –≤—Ä–µ–º—è –Ω–∞ –ï–ö–ë"""
    global _time_timezone
    _time_timezone = 'Asia/Yekaterinburg'
    await event.edit("–í—Ä–µ–º—è –≤ –Ω–∏–∫–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø–æ –ï–ö–ë")

@events.register(events.NewMessage(pattern=f'[{"".join(prefixes)}]time_omsk'))
async def time_omsk_handler(event):
    """–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –≤—Ä–µ–º—è –Ω–∞ –û–º—Å–∫"""
    global _time_timezone
    _time_timezone = 'Asia/Omsk'
    await event.edit("–í—Ä–µ–º—è –≤ –Ω–∏–∫–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø–æ –û–º—Å–∫—É")

@events.register(events.NewMessage(pattern=f'[{"".join(prefixes)}]time_samara'))
async def time_samara_handler(event):
    """–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –≤—Ä–µ–º—è –Ω–∞ –°–∞–º–∞—Ä—É"""
    global _time_timezone
    _time_timezone = 'Europe/Samara'
    await event.edit("–í—Ä–µ–º—è –≤ –Ω–∏–∫–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø–æ –°–∞–º–∞—Ä–µ")

async def update_nick(client):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ –Ω–∏–∫–µ"""
    while _time_running:
        current_time = datetime.now(pytz.timezone(_time_timezone)).strftime("%H:%M")
        await client(EditProfileRequest(first_name=current_time))
        await asyncio.sleep(60)  # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É

# –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    client = await setup_client()

    handlers = [
        secret_handler,  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /secret
        loliArt.loliartcmd,  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã .loliart
        lolihentai.lolicmd,  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã .loli
        help_handler,
        anime_handler,
        im_handler,
        imstop_handler,
        time_handler,
        time_msk_handler,
        time_ekb_handler,
        time_omsk_handler,
        time_samara_handler
    ]

    for handler in handlers:
        client.add_event_handler(handler)

    print("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    await client.start()

    print("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
    await client.run_until_disconnected()

if __name__ == '__main__':
    asyncio.run(main())
